---
import '@styles/main.scss';

import Footer from './Footer/Footer.astro';
import Header from './Header/Header.astro';

type Props = {
	title: string;
};

const { title } = Astro.props as Props;
---

<html lang="ja">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

		<title>{title}</title>
	</head>
	<body>
		<div class="container">
			<Header />
			<main role="main">
				<slot />
			</main>
			<Footer />
		</div>
	</body>

	<style lang="scss">
		@import '@styles/main.scss';
		body {
			background-color: var(--background-primary-color);
		}
		.container {
			overflow: hidden;
			display: grid;
			grid-template-rows: auto 1fr auto;
			grid-template-columns: 100%;
			min-height: 100vh;
		}
	</style>

	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const imageElements = Array.from(document.querySelectorAll('[class^=top__image_]')); // クラス名が top__image_ で始まる要素をすべて選択

			// 配列をシャッフルする関数
			function shuffleArray(array: Element[]) {
				for (let i = array.length - 1; i > 0; i--) {
					const j = Math.floor(Math.random() * (i + 1));
					[array[i], array[j]] = [array[j], array[i]];
				}
			}

			shuffleArray(imageElements); // 画像の要素の配列をシャッフル

			imageElements.forEach((element, index) => {
				setTimeout(() => {
					const htmlElement = element as HTMLElement; // elementをHTMLElementとして型変換
					htmlElement.classList.add('fade-in');
				}, index * 100); // 0.1秒ずつ遅延
			});
		});
	</script>
</html>
