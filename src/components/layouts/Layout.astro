---
import '@styles/main.scss';

// import { Buffer } from 'buffer';
import Footer from './Footer/Footer.astro';
import Header from './Header/Header.astro';
import NavMenus from './Nav/NavMenus.astro';

const authorization = Astro.request.headers.get('authorization');
const pieces = authorization?.split(/\s+/g);

if (authorization) {
	if (pieces) {
		if (pieces[0] === 'Basic') {
			const buffer = Buffer.from(pieces[1], 'base64');
			const credentials = buffer.toString();
			const [username, password] = credentials.split(':');

			if (
				username === import.meta.env.ADMIN_ID &&
				password === import.meta.env.ADMIN_PASSWORD
			) {
				Astro.response.status = 200;
				Astro.response.headers.delete('WWW-Authenticate');
				Astro.response.headers.delete('Content-Length');
			}
		}
	}
} else {
	Astro.response.status = 401;
	Astro.response.headers.set('WWW-Authenticate', 'Basic realm="realm"');
	Astro.response.headers.set('Content-Length', '0');
}

type Props = {
	title: string;
};

const { title } = Astro.props as Props;
---

<html lang="ja">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div class="container">
			<Header />
			<NavMenus />
			<main role="main">
				<slot />
			</main>
			<Footer />
		</div>
	</body>

	<style lang="scss">
		@import '@styles/main.scss';
		body {
			background-color: var(--background-primary-color);
		}
		.container {
			overflow: hidden;
			display: grid;
			grid-template-rows: auto 1fr auto;
			grid-template-columns: 100%;
			min-height: 100vh;
		}
	</style>
</html>

<script>
	window.addEventListener('load', () => {
		setTimeout(() => {
			document.querySelector('html')!.classList.add('loaded');
		}, 1);
	});
</script>
