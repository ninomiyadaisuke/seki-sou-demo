---
import { imageData } from '@components/templates/top/data/topsection';
import ResponsiveImage from '@components/ui/ResponsiveImage.astro';
---

{
	imageData.map((image, index) => {
		return (
			<div class={`image_${index + 1}`}>
				<ResponsiveImage
					src={image.src}
					alt={image.alt}
					sizes={image.sizes}
					loading={'eager'}
					decoding={image.decoding}
				/>
			</div>
		);
	})
}

<style lang="scss">
	@import '@styles/main.scss';
	.image_1,
	.image_2,
	.image_3,
	.image_4,
	.image_5,
	.image_6,
	.image_7,
	.image_8 {
		position: absolute;
		z-index: 1;
		opacity: 0;
	}
	.image_1 {
		width: 64%;
		top: 47vw;
		left: calc(50% - 24.5vw);
	}
	.image_2 {
		display: none;
	}
	.image_3 {
		top: 131vw;
		left: -10.7vw;
		width: 42.7%;
	}
	.image_4 {
		top: 180vw;
		left: 22.7vw;
		width: 32%;
	}
	.image_5 {
		top: 0;
		left: calc(100% - 6.1vw);
		width: 36%;
	}
	.image_6 {
		top: 243.7vw;
		left: 44vw;
		width: 64%;
	}
	.image_7 {
		top: 328.8vw;
		left: 23.5vw;
		width: 32%;
		z-index: -1;
	}
	.image_8 {
		top: 252.3vw;
		left: -12.5vw;
		width: 27%;
	}
	.fade-in {
		@include fadeIn;
	}

	@include mq('md') {
		.image_1 {
			top: 8.75vw;
			left: calc(50% - 18vw);
			width: 31%;
		}
		.image_2 {
			display: block;
			top: -3.75vw;
			left: calc(50% + 10.15625vw);
			z-index: 0;
			width: 12.5%;
		}
		.image_3 {
			top: 27.5vw;
			left: -3.515625vw;
			width: 18.8%;
		}
		.image_4 {
			top: 47.265625vw;
			left: 11.71875vw;
			width: 12.5%;
		}
		.image_5 {
			top: 16.09375vw;
			left: calc(100% - 12vw);
			width: 18.8%;
		}
		.image_6 {
			top: 57.96875vw;
			left: 56.328125vw;
			width: 25%;
			z-index: 11;
		}
		.image_7 {
			top: 90vw;
			left: 75vw;
			width: 18.75%;
			z-index: 10;
		}
		.image_8 {
			top: 87.03125vw;
			left: 14.0625vw;
			width: 12.5%;
		}
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const imageElements = Array.from(document.querySelectorAll('[class^=image_]'));
		function shuffleArray(array: Element[]) {
			for (let i = array.length - 1; i > 0; i--) {
				const j = Math.floor(Math.random() * (i + 1));
				[array[i], array[j]] = [array[j], array[i]];
			}
		}
		shuffleArray(imageElements); // 画像の要素の配列をシャッフル
		imageElements.forEach((element, index) => {
			setTimeout(() => {
				const htmlElement = element;
				htmlElement.classList.add('fade-in');
			}, index * 100); // 0.1秒ずつ遅延
		});
	});
</script>
